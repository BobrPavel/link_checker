import asyncio
import aiohttp
from urllib.parse import urlparse

async def is_working_url(url: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ URL –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω"""
    # üîπ –ü—Ä–∏–≤–æ–¥–∏–º URL –∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º–µ
    parsed = urlparse(url)
    if not parsed.scheme:
        url = "https://" + url  # –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ö–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    try:
        timeout = aiohttp.ClientTimeout(total=10)
        headers = {"User-Agent": "Mozilla/5.0 (URLCheckerBot/1.0)"}

        async with aiohttp.ClientSession(timeout=timeout, headers=headers) as session:
            async with session.get(url, allow_redirects=True, ssl=False) as response:
                # –°—á–∏—Ç–∞–µ–º —Ä–∞–±–æ—á–∏–º–∏ –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç 200 –¥–æ 399
                return 200 <= response.status < 400

    except aiohttp.ClientConnectorError:
        # –û—à–∏–±–∫–∞ DNS –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        return False
    except aiohttp.InvalidURL:
        # –°–æ–≤—Å–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π URL
        return False
    except asyncio.TimeoutError:
        # –ü—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç
        return False
    except Exception:
        # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, SSL)
        return False
